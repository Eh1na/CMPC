version: '3.8'

services:
  db:
    image: postgres:15-alpine
    container_name: cmpc-db
    environment:
      POSTGRES_USER: cmpcuser
      POSTGRES_PASSWORD: cmpcpass123
      POSTGRES_DB: cmpcdb
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U cmpcuser -d cmpcdb"]
      interval: 5s
      timeout: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - cmpc-network
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      args:
        NODE_ENV: production
    container_name: cmpc-backend
    environment:
      NODE_ENV: production
    env_file:
      - ./backend/.env.docker
    volumes:
      - ./backend:/app
      - uploads:/app/uploads
      - /app/node_modules  # Evita sobrescribir node_modules del host
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "3000:3000"
    networks:
      - cmpc-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: cmpc-frontend
    ports:
      - "3001:80"
      - "443:443"  # Para futura configuraci√≥n HTTPS
    depends_on:
      - backend
    networks:
      - cmpc-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  uploads:
    driver: local

networks:
  cmpc-network:
    driver: bridge
    name: cmpc-network